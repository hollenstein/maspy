Maspy resources
---------------

make executables usable in linux


Fasta reading:
-> change maspy.proteindb._readFastaFile to maybe something like from pyteomics, which is more robust

Bug fixes, performance, code design, documentation, ...
-------------------------------------------------------
- Implementation of multi processing for certain bottleneck tasks.

  - generate siContainerFiles
  - in silico digest (split proteins into batches, then add results to proteindb)
  - rt alignment (one specfile pair per process)
  - recalibration of mz (one process per specfile)

Constants
---------
- use a local unimod database and pyteomics.mass.unimod to generate constants.aaModComp

Core
----
- splitContainer -> returns a list of containers or a dict
- extractContainer -> returns one container of one or multiple specfiles

General concepts
----------------
- allow methods manipulating data (eg. psm to feature matching, rt alignment, ...) should return
  a report object, this report object can then be used to plot / print / write file report of the procedure

Peptide features
----------------
- Retention time alignment: return an object that allows subsequent correction of the retention time
- Feature grouping: Introduce some statistical measurement for rt, m/z deviation cut off
- Correct the MH dependent m/z error of features generated by openMS feature finder centroided
- Add calcMz attribute to annotated features (depending on best peptide identification of course)

Peptide feature groups
----------------------
- Label state predictor -> retention time shifts

Protein database
----------------
- importProteinDatabase -> provide a function, where a protein attribute can be specified and a new dictionary is generated,
  linking this attribute, preferably the protein name, to the protein entry
- Rework peptide entities (currently not so important)
- Save and load protein database from an in silico digested fasta file (specify number of missed cleavages upon import)
- Generate decoy fasta files from target fasta files

Workflows
---------

Spectrum Identification Items
-----------------------------
- Add mzIdentlML as standard SII import format
- Protein grouping (work in progress)
- Properly implement dipeptides (label descriptor, protein evidence)
  when generating psmList, group psm according to specfile, use Try: except statement... (can't remember what this means)
